default_platform(:ios)

before_all do
	sh 'mkdir ../reports || true'
	sh 'mkdir ../dist || true'
end

desc "Does a static analysis of the project. Configure the options in .swiftlint.yml"
lane :lint do
  swiftlint(
      mode: :lint,
      output_file: 'reports/swiftlint.txt',
      config_file: 'fastlane/.swiftlint.yml'
    )
end
  
  
desc "Run unit tests."
lane :tests do
   run_tests(workspace: "TelnyxRTC.xcworkspace",
            scheme: "TelnyxRTCTests")
end

desc "Create a file with the Changelog output between a specific TAG and HEAD"
lane :changelog do |options|
changelog_from_git_commits(
	between: [options[:tag],"HEAD"],
  	pretty: "* %b [%aN]",# Optional, lets you provide a custom format to apply to each commit when generating the changelog text
  	date_format: "short",# Optional, lets you provide an additional date format to dates within the pretty-formatted string
  	match_lightweight_tag: false,  # Optional, lets you ignore lightweight (non-annotated) tags when searching for the last tag
  	merge_commit_filtering: "only_include_merges" # Optional, lets you filter out merge commits
)
#store changelog in a external file
changelog = lane_context[SharedValues::FL_CHANGELOG]
File.open("changelog.txt", 'w') { |file| file.write("#{changelog}") }

end


desc "Generate documentation using Jazzy - HTML docs"
lane :generate_docs do
  sh <<-SHELL
    cd .. && jazzy \
      --clean \
      --author "Telnyx LLC" \
      --author_url "https://www.telnyx.com/" \
      --xcodebuild-arguments -workspace,TelnyxRTC.xcworkspace,-scheme,TelnyxRTC,-sdk,iphonesimulator,-destination,platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro Max \
      --output ./docs
  SHELL
  UI.message("ðŸ“š Documentation generated in ./docs")
end

desc "Generate documentation using SourceDocs - Markdown docs"
lane :generate_docs_markdown do
  sh <<-SHELL
    cd .. && sourcedocs generate --output-folder ./docs-markdown \
                              -- \
                              -workspace TelnyxRTC.xcworkspace \
                              -scheme TelnyxRTC \
                              -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro Max'


  SHELL
  UI.message("ðŸ“„ Markdown documentation generated in ./markdown")
end

desc "Generate HTML and Markdown documentation"
lane :generate_full_docs do
  generate_docs
  generate_docs_markdown
  UI.success("âœ… Documentation successfully generated and converted to Markdown")
end

desc "Builds the app and tests in build-for-testing mode to be executed later on devices or in Firebase Test Lab."
lane :build_for_testing do
  xcodebuild(
    workspace: "TelnyxRTC.xcworkspace",
    scheme: "TelnyxWebRTCDemo",
    sdk: "iphoneos",
    configuration: "Debug",
    destination: "generic/platform=iOS",
    derivedDataPath: "build",
    xcargs: "CODE_SIGNING_ALLOWED=NO SUPPORTS_MACCATALYST=NO -allowProvisioningUpdates"
  )
end