# This workflow automates the creation of a GitHub Release for the SDK.
#
# ðŸ“‹ Steps:
# 1. Checks out the `main` branch.
# 2. Gets the latest semver tag (e.g. 2.3.4).
# 3. Gets all commits from that tag to HEAD.
# 4. Lists all PRs merged into `main` and checks which are in that commit range.
# 5. Generates a changelog with the PRs.
# 6. Creates a GitHub release using the changelog.

name: release-03-create-gh-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true
        default: '0.0.0'

jobs:
  release_create_github_release:
    runs-on: macos-latest

    steps:
    - name: ðŸ”„ Checkout main branch
      uses: actions/checkout@v2
      with:
        ref: main
        fetch-depth: 0  # needed to access tags and full history

    - name: ðŸ”– Get latest tag before new version
      id: get-previous-tag
      run: |
        PREVIOUS_TAG=$(git tag --sort=-v:refname | grep -E '^([0-9]+\.){2}[0-9]+$' | head -n 1)
        echo "Previous tag: $PREVIOUS_TAG"
        echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

    - name: ðŸ“‹ Generate changelog from merged PRs
      id: pr_list
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git log --pretty=format:"%H" ${{ steps.get-previous-tag.outputs.previous_tag }}..HEAD > commits.txt
        gh pr list --state merged --base main --json title,number,mergeCommit \
          --jq ".[] | [.title, .number, .mergeCommit.oid] | @tsv" > pr_data.tsv

        # Create changelog.txt from scratch (overwrite if exists)
        > changelog.txt
        while IFS=$'\t' read -r title number commit; do
          if grep -q "$commit" commits.txt; then
            echo "- PR #$number: $title" >> changelog.txt
          fi
        done < pr_data.tsv

        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat changelog.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: ðŸ“„ Print changelog
      run: cat changelog.txt

    - name: ðŸš€ Create GitHub Release
      uses: zendesk/action-create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body: ${{ steps.pr_list.outputs.changelog }}
        draft: false
        prerelease: false
